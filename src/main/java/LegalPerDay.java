import com.google.gson.Gson;
import com.google.gson.stream.JsonReader;
import sun.security.krb5.internal.crypto.EType;

import java.io.IOException;
import java.io.StringReader;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

public class LegalPerDay {
    private static final int id = 0; //證券代號
    private static final int name = 1; //證券名稱
    private static final int foreignBuy = 2; //外陸資買進股數(不含外資自營商)
    private static final int foreignSell = 3; //外陸資賣出股數(不含外資自營商)
    private static final int foreignDiff = 4; //外陸資買賣超股數(不含外資自營商)
    private static final int foreignSelfBuy = 5; //外資自營商買進股數
    private static final int foreignSelfSell = 6; //外資自營商賣出股數
    private static final int foreignSelfDiff = 7; //外資自營商買賣超股數
    private static final int investBuy = 8; //投信買進股數
    private static final int investSell = 9; //投信賣出股數
    private static final int investDiff = 10; //投信買賣超股數
    private static final int localDiff = 11; //自營商買賣超股數
    private static final int localBuy = 12; //自營商買進股數(自行買賣)
    private static final int localSell = 13; //自營商賣出股數(自行買賣)
    private static final int localDiff2 = 14; //自營商買賣超股數(自行買賣)
    private static final int localRiskBuy = 15; //自營商買進股數(避險)
    private static final int localRiskSell = 16; //自營商賣出股數(避險)
    private static final int localRiskDiff = 17; //自營商買賣超股數(避險)
    private static final int total = 18; //三大法人買賣超股數

    private static String data = "data";
    public static String content = "{\"stat\":\"OK\",\"date\":\"20181207\",\"title\":\"107年12月07日 三大法人買賣超日報\",\"fields\":[\"證券代號\",\"證券名稱\",\"外陸資買進股數(不含外資自營商)\",\"外陸資賣出股數(不含外資自營商)\",\"外陸資買賣超股數(不含外資自營商)\",\"外資自營商買進股數\",\"外資自營商賣出股數\",\"外資自營商買賣超股數\",\"投信買進股數\",\"投信賣出股數\",\"投信買賣超股數\",\"自營商買賣超股數\",\"自營商買進股數(自行買賣)\",\"自營商賣出股數(自行買賣)\",\"自營商買賣超股數(自行買賣)\",\"自營商買進股數(避險)\",\"自營商賣出股數(避險)\",\"自營商買賣超股數(避險)\",\"三大法人買賣超股數\"],\"data\":[[\"2515\",\"中工            \",\"1,812,000\",\"1,957,000\",\"-145,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"2,529,000\",\"40,000\",\"286,000\",\"-246,000\",\"2,797,000\",\"22,000\",\"2,775,000\",\"2,384,000\"],[\"2520\",\"冠德            \",\"1,246,000\",\"428,000\",\"818,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"139,000\",\"16,000\",\"62,000\",\"-46,000\",\"300,000\",\"115,000\",\"185,000\",\"957,000\"],[\"2504\",\"國產            \",\"532,000\",\"186,000\",\"346,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-6,000\",\"0\",\"6,000\",\"-6,000\",\"0\",\"0\",\"0\",\"340,000\"],[\"2534\",\"宏盛            \",\"334,000\",\"156,800\",\"177,200\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-1,000\",\"0\",\"3,000\",\"-3,000\",\"2,000\",\"0\",\"2,000\",\"176,200\"],[\"2542\",\"興富發          \",\"387,000\",\"203,000\",\"184,000\",\"0\",\"0\",\"0\",\"2,000\",\"0\",\"2,000\",\"-14,000\",\"0\",\"21,000\",\"-21,000\",\"7,000\",\"0\",\"7,000\",\"172,000\"],[\"2841\",\"台開            \",\"197,000\",\"31,000\",\"166,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-4,000\",\"0\",\"4,000\",\"-4,000\",\"0\",\"0\",\"0\",\"162,000\"],[\"5522\",\"遠雄            \",\"269,000\",\"134,000\",\"135,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-15,000\",\"0\",\"15,000\",\"-15,000\",\"0\",\"0\",\"0\",\"120,000\"],[\"5521\",\"工信            \",\"142,000\",\"21,000\",\"121,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-21,000\",\"0\",\"21,000\",\"-21,000\",\"0\",\"0\",\"0\",\"100,000\"],[\"2538\",\"基泰            \",\"73,000\",\"18,000\",\"55,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"3,000\",\"3,000\",\"0\",\"3,000\",\"0\",\"0\",\"0\",\"58,000\"],[\"2505\",\"國揚            \",\"94,000\",\"43,000\",\"51,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-9,000\",\"0\",\"9,000\",\"-9,000\",\"0\",\"0\",\"0\",\"42,000\"],[\"2527\",\"宏璟            \",\"48,000\",\"5,000\",\"43,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-2,000\",\"0\",\"2,000\",\"-2,000\",\"0\",\"0\",\"0\",\"41,000\"],[\"9906\",\"欣巴巴          \",\"51,000\",\"11,000\",\"40,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"40,000\"],[\"3703\",\"欣陸            \",\"44,000\",\"5,000\",\"39,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"39,000\"],[\"5531\",\"鄉林            \",\"62,000\",\"18,000\",\"44,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-6,000\",\"0\",\"6,000\",\"-6,000\",\"0\",\"0\",\"0\",\"38,000\"],[\"2547\",\"日勝生          \",\"247,000\",\"211,000\",\"36,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-11,000\",\"1,000\",\"12,000\",\"-11,000\",\"0\",\"0\",\"0\",\"25,000\"],[\"2597\",\"潤弘            \",\"22,000\",\"5,000\",\"17,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-1,000\",\"0\",\"1,000\",\"-1,000\",\"0\",\"0\",\"0\",\"16,000\"],[\"2537\",\"聯上發          \",\"12,000\",\"0\",\"12,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"12,000\"],[\"6177\",\"達麗            \",\"7,000\",\"0\",\"7,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"7,000\"],[\"5525\",\"順天            \",\"7,000\",\"3,000\",\"4,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"4,000\"],[\"2539\",\"櫻花建          \",\"2,000\",\"0\",\"2,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"2,000\"],[\"2545\",\"皇翔            \",\"6,000\",\"6,430\",\"-430\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1,000\",\"1,000\",\"0\",\"1,000\",\"0\",\"0\",\"0\",\"570\"],[\"1436\",\"華友聯          \",\"0\",\"400\",\"-400\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-400\"],[\"1808\",\"潤隆            \",\"24,000\",\"23,000\",\"1,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-2,000\",\"0\",\"2,000\",\"-2,000\",\"0\",\"0\",\"0\",\"-1,000\"],[\"2540\",\"愛山林          \",\"0\",\"1,000\",\"-1,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-1,000\"],[\"5519\",\"隆大            \",\"7,000\",\"8,000\",\"-1,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1,000\",\"1,000\",\"0\",\"0\",\"0\",\"0\",\"-1,000\"],[\"2530\",\"華建            \",\"0\",\"2,000\",\"-2,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-2,000\"],[\"5534\",\"長虹            \",\"171,000\",\"174,000\",\"-3,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"3,000\",\"-3,000\",\"4,000\",\"1,000\",\"3,000\",\"-3,000\"],[\"3266\",\"昇陽            \",\"2,000\",\"6,000\",\"-4,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-4,000\"],[\"2524\",\"京城            \",\"24,000\",\"21,000\",\"3,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-9,000\",\"1,000\",\"10,000\",\"-9,000\",\"0\",\"0\",\"0\",\"-6,000\"],[\"9946\",\"三發地產        \",\"0\",\"6,000\",\"-6,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-6,000\"],[\"2509\",\"全坤建          \",\"3,000\",\"10,000\",\"-7,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-7,000\"],[\"2506\",\"太設            \",\"1,000\",\"2,000\",\"-1,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-7,000\",\"0\",\"7,000\",\"-7,000\",\"0\",\"0\",\"0\",\"-8,000\"],[\"2546\",\"根基            \",\"0\",\"8,000\",\"-8,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-8,000\"],[\"2516\",\"新建            \",\"2,000\",\"9,000\",\"-7,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-3,000\",\"0\",\"3,000\",\"-3,000\",\"0\",\"0\",\"0\",\"-10,000\"],[\"3052\",\"夆典            \",\"2,000\",\"15,000\",\"-13,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-13,000\"],[\"2536\",\"宏普            \",\"3,000\",\"18,000\",\"-15,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-2,000\",\"0\",\"2,000\",\"-2,000\",\"0\",\"0\",\"0\",\"-17,000\"],[\"5533\",\"皇鼎            \",\"20,000\",\"47,000\",\"-27,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-27,000\"],[\"1442\",\"名軒            \",\"26,000\",\"58,000\",\"-32,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-32,000\"],[\"5515\",\"建國            \",\"34,000\",\"82,000\",\"-48,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-48,000\"],[\"2535\",\"達欣工          \",\"1,000\",\"66,000\",\"-65,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-65,000\"],[\"2501\",\"國建            \",\"95,000\",\"163,000\",\"-68,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-23,000\",\"0\",\"23,000\",\"-23,000\",\"0\",\"0\",\"0\",\"-91,000\"],[\"2511\",\"太子            \",\"168,000\",\"271,000\",\"-103,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-29,000\",\"0\",\"29,000\",\"-29,000\",\"0\",\"0\",\"0\",\"-132,000\"],[\"2923\",\"鼎固-KY         \",\"0\",\"145,000\",\"-145,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-145,000\"],[\"2548\",\"華固            \",\"94,000\",\"238,000\",\"-144,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-7,000\",\"0\",\"7,000\",\"-7,000\",\"0\",\"0\",\"0\",\"-151,000\"],[\"3056\",\"總太            \",\"4,000\",\"182,000\",\"-178,000\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"-178,000\"]],\"selectType\":\"14\",\"notes\":[\"自營商表示證券自營商專戶。\",\"投信表示本國投資信託基金。\",\"外資及陸資表示依「華僑及外國人投資證券管理辦法」及「大陸地區投資人來臺從事證券投資及期貨交易管理辦法」辦理登記等投資人。\",\"外資自營商買賣股數已計入自營商買賣股數，故不納入三大法人買賣股數之合計數計算。\",\"本統計資訊含一般、零股、盤後定價、鉅額，不含拍賣、標購。\",\"本資訊以當日原始成交情形統計，不以證券商申報錯帳、更正帳號等調整後資料統計。\",\"ETF證券代號第六碼為K、M、S、C者，表示該ETF以外幣交易。\"]}";

    public static String getPrice(String date, String id) throws IOException {
        return CUrlTool.getPrice("http://www.twse.com.tw/fund/T86?response=json&date=" + date + "&selectType=" + EStockId.valueOf("STK" + id).getType());
    }

    public static LegalPerDayView parsePriceResult(String content, String id) throws IOException {
        LegalPerDayView view = new LegalPerDayView();
        JsonReader reader = new JsonReader(new StringReader(content));
        reader.setLenient(true);
        reader.beginObject();

        while (reader.hasNext()) {
            String name = reader.nextName();
            if (!data.equals(name)) {
                reader.skipValue();
                continue;
            }

            reader.beginArray();
            while (reader.hasNext()) {

                reader.beginArray();
                int index = 1;
                boolean isMatch = id.equals(reader.nextString());

                while (reader.hasNext()) {
                    if (isMatch) {
                        setContent(view, reader.nextString().trim(), index);
                        index++;
                    } else {
                        reader.skipValue();
                    }
                }
                reader.endArray();
            }
            reader.endArray();
        }
        return view;
    }

    private static void setContent(LegalPerDayView view, String content, int index) {
        switch (index) {
            case id:
                view.setId(content);
                break;
            case name:
                view.setName(content);
                break;
            case foreignBuy:
                view.setForeignBuy(content);
                break;
            case foreignSell:
                view.setForeignSell(content);
                break;
            case foreignDiff:
                view.setForeignDiff(content);
                break;
            case foreignSelfBuy:
                view.setForeignSelfBuy(content);
                break;
            case foreignSelfSell:
                view.setForeignSelfSell(content);
                break;
            case foreignSelfDiff:
                view.setForeignSelfDiff(content);
                break;
            case investBuy:
                view.setInvestBuy(content);
                break;
            case investSell:
                view.setInvestSell(content);
                break;
            case investDiff:
                view.setInvestDiff(content);
                break;
            case localDiff:
                view.setLocalDiff(content);
                break;
            case localBuy:
                view.setLocalBuy(content);
                break;
            case localSell:
                view.setLocalSell(content);
                break;
            case localDiff2:
                view.setLocalDiff2(content);
                break;
            case localRiskBuy:
                view.setLocalRiskBuy(content);
                break;
            case localRiskSell:
                view.setLocalRiskSell(content);
                break;
            case localRiskDiff:
                view.setLocalRiskDiff(content);
                break;
            case total:
                view.setTotal(content);
                break;
        }
    }

    public static void main(String[] args) throws IOException, InterruptedException {
        DateFormat dateFormat = new SimpleDateFormat("yyyyMMdd");
        Date date1 = new Date();
        String date = dateFormat.format(date1);
//        String date = "20181210";
        for (String id : EStockId.getAllId()) {
            String result = getPrice(date, id);
            LegalPerDayView view = parsePriceResult(result, id);
            System.out.println(new Gson().toJson(view));

            int sleep = CUrlTool.getRandomSleep();
            System.out.println("sleep = " + sleep);
            Thread.sleep(sleep*1000);
        }
    }
}